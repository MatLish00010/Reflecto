name: Lighthouse CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # For production builds
      - name: Prepare Lighthouse directory
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p .lighthouseci
          echo "Created .lighthouseci directory"

      - name: Run Lighthouse CI (Production)
        if: github.event_name != 'pull_request'
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouserc.json'
          uploadArtifacts: false

      - name: Debug Lighthouse results (Production)
        if: github.event_name != 'pull_request'
        run: |
          echo "=== Current directory ==="
          pwd
          ls -la
          
          echo ""
          echo "=== Checking for .lighthouseci directory ==="
          if [ -d ".lighthouseci" ]; then
            echo "✅ .lighthouseci directory exists"
            ls -la .lighthouseci/
            
            echo ""
            echo "=== Checking for manifest.json ==="
            if [ -f ".lighthouseci/manifest.json" ]; then
              echo "✅ manifest.json exists"
              echo "Content (first 10 lines):"
              head -10 .lighthouseci/manifest.json
            else
              echo "❌ manifest.json not found"
            fi
          else
            echo "❌ .lighthouseci directory not found"
            
            echo ""
            echo "=== Checking for any lighthouse files ==="
            find . -name "*lighthouse*" -type f 2>/dev/null || echo "No lighthouse files found"
            
            echo ""
            echo "=== Checking for any .json files ==="
            find . -name "*.json" -type f 2>/dev/null | head -10
            
            echo ""
            echo "=== Checking for any .html files ==="
            find . -name "*.html" -type f 2>/dev/null | head -10
          fi

      - name: Upload Lighthouse results (Production)
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results-production
          path: .lighthouseci/
          retention-days: 7
          if-no-files-found: warn

      # For PRs - wait for Vercel preview and test
      - name: Wait for Vercel deployment
        if: github.event_name == 'pull_request'
        run: |
          echo "Waiting for Vercel preview deployment..."
          sleep 60

      - name: Get Vercel preview URL
        if: github.event_name == 'pull_request'
        id: get-preview-url
        run: |
          echo "Getting preview URL for PR #${{ github.event.number }}..."
          
          # Method 1: Extract from Vercel bot comments (most reliable)
          echo "Looking for Vercel bot comment..."
          PREVIEW_URL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments" \
            | jq -r '.[] | select(.user.login == "vercel[bot]") | .body' \
            | grep -oE 'https://[^/]+\.vercel\.app' | head -1)
          
          if [ -n "$PREVIEW_URL" ]; then
            echo "✅ Found preview URL from Vercel bot: $PREVIEW_URL"
            echo "preview-url=$PREVIEW_URL" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Method 2: Fallback - simple URL construction
          echo "Using fallback method..."
          CLEAN_BRANCH_NAME=$(echo "${{ github.head_ref }}" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
          PREVIEW_URL="https://reflecto-git-${CLEAN_BRANCH_NAME}-${{ github.repository_owner }}.vercel.app"
          echo "⚠️ Using constructed URL: $PREVIEW_URL"
          echo "preview-url=$PREVIEW_URL" >> $GITHUB_OUTPUT



      - name: Prepare Lighthouse directory
        if: github.event_name == 'pull_request'
        run: |
          mkdir -p .lighthouseci
          echo "Created .lighthouseci directory"

      - name: Run Lighthouse CI (Preview)
        if: github.event_name == 'pull_request'
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ steps.get-preview-url.outputs.preview-url }}/
          uploadArtifacts: false

      - name: Debug Lighthouse results (Preview)
        if: github.event_name == 'pull_request'
        run: |
          echo "=== Current directory ==="
          pwd
          ls -la
          
          echo ""
          echo "=== Checking for .lighthouseci directory ==="
          if [ -d ".lighthouseci" ]; then
            echo "✅ .lighthouseci directory exists"
            ls -la .lighthouseci/
          else
            echo "❌ .lighthouseci directory not found"
            
            echo ""
            echo "=== Checking for any lighthouse files ==="
            find . -name "*lighthouse*" -type f 2>/dev/null || echo "No lighthouse files found"
            
            echo ""
            echo "=== Checking for any .json files ==="
            find . -name "*.json" -type f 2>/dev/null | head -10
          fi

      - name: Upload Lighthouse results (Preview)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results-preview
          path: .lighthouseci/
          retention-days: 7
          if-no-files-found: warn
